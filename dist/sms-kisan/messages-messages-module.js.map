{"version":3,"sources":["webpack:///./src/app/messages/mat-modules.ts","webpack:///./src/app/messages/messages.module.ts","webpack:///./src/app/messages/messages.routing.ts","webpack:///./src/app/messages/messages.service.ts","webpack:///./src/app/messages/messages/messages.component.css","webpack:///./src/app/messages/messages/messages.component.html","webpack:///./src/app/messages/messages/messages.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACI;AACJ;AACA;AACE;AAElD,IAAM,OAAO,GAAG;IACnB,wEAAe;IACf,oEAAa;IACb,oEAAa;IACb,oEAAa;IACb,sEAAc;CACjB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZwC;AACM;AACmB;AACnB;AACH;AACJ;AAWxC;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAR1B,8DAAQ,CAAC;YACR,OAAO;gBACL,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,wDAAM,CAAC;qBAC1B,oDAAO,CACX;YACD,YAAY,EAAE,CAAC,8EAAiB,CAAC;SAClC,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACf3B;AAAA;AAAA;AAAkE;AAE3D,IAAM,MAAM,GAAW;IAC1B;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAiB;KAC/B;CACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACRyC;AACO;AAOlD;IAEE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,mCAAU,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IAC3C,CAAC;IANU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,cAAc,CAQ1B;IAAD,qBAAC;CAAA;AAR0B;;;;;;;;;;;;ACR3B,2BAA2B,6BAA6B,GAAG,mBAAmB,uBAAuB,GAAG,aAAa,+BAA+B,2BAA2B,GAAG,kCAAkC,0BAA0B,GAAG,gBAAgB,sBAAsB,GAAG,gCAAgC,kBAAkB,2BAA2B,OAAO,GAAG,+BAA+B,kBAAkB,2BAA2B,OAAO,GAAG,+BAA+B,kBAAkB,2BAA2B,OAAO,GAAG,+BAA+B,kBAAkB,2BAA2B,OAAO,GAAG,O;;;;;;;;;;;ACAnnB,oRAAoR,mFAAmF,UAAU,qCAAqC,UAAU,uEAAuE,UAAU,sG;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/b;AACG;AACe;AASpE;IAEE,2BAAoB,UAA0B;QAA1B,eAAU,GAAV,UAAU,CAAgB;QADvC,aAAQ,GAAe,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IACO,CAAC;IAEnD,oCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAC1C,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;QACrC,CAAC,CAAC;IACJ,CAAC;IAED,qCAAS,GAAT,UAAU,KAAK,EAAE,IAAI;QACnB,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAZU,iBAAiB;QAP7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;YAGxB,UAAU,EAAE,CAAC,6DAAiB,EAAE,yDAAa,CAAC;YAC9C,IAAI,EAAE,EAAE,qBAAqB,EAAE,EAAE,EAAE;SACpC,CAAC;yCAGgC,gEAAc;OAFnC,iBAAiB,CAc7B;IAAD,wBAAC;CAAA;AAd6B","file":"messages-messages-module.js","sourcesContent":["import { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatInputModule } from '@angular/material/input';\n\nexport const modules = [\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule\n]","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MessagesComponent } from './messages/messages.component';\nimport { RouterModule } from '@angular/router';\nimport { routes } from './messages.routing';\nimport { modules } from './mat-modules';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ...modules\n  ],\n  declarations: [MessagesComponent]\n})\nexport class MessagesModule { }\n","import { Routes } from '@angular/router';\nimport { MessagesComponent } from './messages/messages.component';\n\nexport const routes: Routes = [\n    {\n        path: '',\n        component: MessagesComponent\n    }\n];","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor(private http: HttpClient) { }\n\n  public getMessage(): Observable<any> {\n    return this.http.get('/api/getMessages');\n  }\n\n}\n","module.exports = \".middle {\\n    vertical-align: middle;\\n}\\n\\n.contact-card {\\n    max-width: 400px;\\n}\\n\\n.d-grig {\\n    display: -ms-inline-grid;\\n    display: inline-grid;\\n}\\n\\n.mat-nav-list .mat-list-item {\\n    padding-bottom: 5em;\\n}\\n\\n.container {\\n    margin-top: 8em;\\n}\\n\\n@media (min-width: 1200px) {\\n    .container {\\n        max-width: 500px;\\n    }\\n}\\n\\n@media (min-width: 992px) {\\n    .container {\\n        max-width: 500px;\\n    }\\n}\\n\\n@media (min-width: 768px) {\\n    .container {\\n        max-width: 500px;\\n    }\\n}\\n\\n@media (min-width: 576px) {\\n    .container {\\n        max-width: 500px;\\n    }\\n}\\n\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <mat-card class=\\\"contact-card\\\">\\n    <mat-card-title>\\n      Messages\\n    </mat-card-title>\\n    <mat-card-content>\\n      <mat-nav-list [@listStagger]='listDropAnimation'>\\n        <mat-list-item *ngFor=\\\"let msg of messages;trackBy: trackByFn\\\">\\n          <span class=\\\"d-grig\\\">\\n            <small>To: {{ msg.to }}</small>\\n            <small>Date: {{msg.date}}</small>\\n          </span>\\n          <p style=\\\"padding-top: 1em\\\">{{msg.text}}</p>\\n        </mat-list-item>\\n      </mat-nav-list>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../messages.service';\nimport { listDropAnimation, routerSlideIn } from '../../animations';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css'],\n  animations: [listDropAnimation, routerSlideIn],\n  host: { '[@routerTransition]': '' }\n})\nexport class MessagesComponent implements OnInit {\n  public messages: Array<any> = new Array(0);\n  constructor(private msgService: MessageService) { }\n\n  ngOnInit() {\n    this.msgService.getMessage().subscribe((msgs) => {\n      this.messages = msgs.usersMessages;\n    })\n  }\n\n  trackByFn(index, item) {\n    return index;\n  }\n\n}\n"],"sourceRoot":""}
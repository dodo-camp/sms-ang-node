{"version":3,"sources":["webpack:///./src/app/contacts/contact-service.service.ts","webpack:///./src/app/contacts/contacts.module.ts","webpack:///./src/app/contacts/contacts.routing.ts","webpack:///./src/app/contacts/contacts/contacts.component.css","webpack:///./src/app/contacts/contacts/contacts.component.html","webpack:///./src/app/contacts/contacts/contacts.component.ts","webpack:///./src/app/contacts/mat-modules.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACO;AAMlD;IAEE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,oCAAW,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IAC3C,CAAC;IANU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPc;AACM;AACmB;AACnB;AACH;AACJ;AAUxC;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAR1B,8DAAQ,CAAC;YACR,OAAO;gBACL,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,wDAAM,CAAC;qBAC1B,oDAAO,CACX;YACD,YAAY,EAAE,CAAC,8EAAiB,CAAC;SAClC,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACd3B;AAAA;AAAA;AAAkE;AAE3D,IAAM,MAAM,GAAW;IAC1B;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAiB;KAC/B;CACJ,CAAC;;;;;;;;;;;;ACRF,2BAA2B,6BAA6B,GAAG,mBAAmB,uBAAuB,GAAG,gBAAgB,sBAAsB,GAAG,gCAAgC,kBAAkB,2BAA2B,OAAO,GAAG,+BAA+B,kBAAkB,2BAA2B,OAAO,GAAG,+BAA+B,kBAAkB,2BAA2B,OAAO,GAAG,+BAA+B,kBAAkB,2BAA2B,OAAO,GAAG,O;;;;;;;;;;;ACA1e,wQAAwQ,gBAAgB,sP;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtO;AACT;AACmB;AACX;AASjD;IAGE,2BAAoB,cAA8B,EAAU,KAAa;QAArD,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAQ;QAFlE,aAAQ,GAAc,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IAEmC,CAAC;IAE9E,oCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,QAAQ;YACnD,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,8CAAkB,GAAzB,UAA0B,IAAY;QACpC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,mBAAiB,IAAM,CAAC,CAAC;IACpD,CAAC;IAbU,iBAAiB;QAP7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;YAGxB,UAAU,EAAE,CAAC,yDAAa,CAAC;YAC3B,IAAI,EAAE,EAAE,qBAAqB,EAAE,EAAE,EAAE;SACpC,CAAC;yCAIoC,uEAAc,EAAiB,sDAAM;OAH9D,iBAAiB,CAe7B;IAAD,wBAAC;CAAA;AAf6B;;;;;;;;;;;;;ACZ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACA;AACI;AACJ;AAEhD,IAAM,OAAO,GAAG;IACnB,oEAAa;IACb,oEAAa;IACb,wEAAe;IACf,oEAAa;CAChB","file":"contacts-contacts-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  constructor(private http: HttpClient) { }\n\n  public getContacts(): Observable<any> {\n    return this.http.get('/api/getContacts');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { RouterModule } from '@angular/router';\nimport { routes } from './contacts.routing';\nimport { modules } from './mat-modules';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ...modules\n  ],\n  declarations: [ContactsComponent]\n})\nexport class ContactsModule { }\n","import { Routes } from '@angular/router';\nimport { ContactsComponent } from './contacts/contacts.component';\n\nexport const routes: Routes = [\n    {\n        path: '',\n        component: ContactsComponent\n    }\n];","module.exports = \".middle {\\n    vertical-align: middle;\\n}\\n\\n.contact-card {\\n    max-width: 400px;\\n}\\n\\n.container {\\n    margin-top: 8em;\\n}\\n\\n@media (min-width: 1200px) {\\n    .container {\\n        max-width: 500px;\\n    }\\n}\\n\\n@media (min-width: 992px) {\\n    .container {\\n        max-width: 500px;\\n    }\\n}\\n\\n@media (min-width: 768px) {\\n    .container {\\n        max-width: 500px;\\n    }\\n}\\n\\n@media (min-width: 576px) {\\n    .container {\\n        max-width: 500px;\\n    }\\n}\\n\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <mat-card class=\\\"contact-card\\\">\\n    <mat-card-title>\\n      Contacts\\n    </mat-card-title>\\n    <mat-card-content>\\n      <mat-nav-list>\\n        <mat-list-item *ngFor=\\\"let contact of contacts\\\">\\n          <p>{{ contact.name }}</p>\\n          <button mat-icon-button (click)=\\\"routeToContactInfo(contact.code)\\\">\\n            <mat-icon>message</mat-icon>\\n          </button>\\n        </mat-list-item>\\n      </mat-nav-list>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ContactService } from '../contact-service.service';\nimport { routerSlideIn } from '../../animations';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css'],\n  animations: [routerSlideIn],\n  host: { '[@routerTransition]': '' }\n})\nexport class ContactsComponent implements OnInit {\n  public contacts: Array<{}> = new Array(0);\n\n  constructor(private contactService: ContactService, private route: Router) { }\n\n  ngOnInit() {\n    this.contactService.getContacts().subscribe((contacts) => {\n      this.contacts = contacts.contacts;\n    });\n  }\n\n  public routeToContactInfo(code: string) {\n    this.route.navigateByUrl(`/contact-info/${code}`);\n  }\n\n}\n","import { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\nexport const modules = [\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule\n]"],"sourceRoot":""}